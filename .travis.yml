group: deprecated-2017Q4
os:
- linux
- osx
osx_image: xcode6.4
language: c
sudo: required
services:
- docker
env:
  matrix:
  - CUDA_VERSION="7.5" CUDA_SHORT_VERSION="75"
  - CUDA_VERSION="8.0" CUDA_SHORT_VERSION="80"
  - CUDA_VERSION="9.0" CUDA_SHORT_VERSION="90"
  - CUDA_VERSION="9.1" CUDA_SHORT_VERSION="91"
  - CUDA_VERSION="9.2" CUDA_SHORT_VERSION="92"
  - CUDA_VERSION="10.0" CUDA_SHORT_VERSION="100"
  global:
    secure: RedLhoQS9aGPvrN7ZL4R9NAsuJT5Z0HPxeqj8cyY9CaxcXIja8MyBPc7brAdb+ZpBMbe8S6+yYuB7DHCJlVEP8CNtGPaPO/z4i/5GdyH0M3iuiQWu4hTZ1ilXmNj/y6pCLDGaOi9CZLz1QrHEZZR0y4pMh1wnoIpRE+fwudgJqmjNbHdeQv5rNbptUJ8jp6YwG40ySgHeaCigA+uMbe7JjiepLqNG4MAOJo+i34pHco1/2u0Ypo0zq5Kdb6zaNoaHwAVWVNZybmnGGSFyBrHlsixmlcUqmU76M4sBmXXVF4sXH5euOZFTlSJ/+Z4mo3UnlS9QMm9ECLYfzZ4Ozoig7GUEoMdOuaywECU0sSC7yXFXgZMXcYZXAhY55aiUOHdVUJAh7vTDl0C7GwPCbduo2PV8KBmYlxjdq4qYaBErYARNJYLuBb2rnx7dF/YqgbnPjl665K7yMovsxVRXiLdA3AfwEBpDPgVmgtJLae5N5KXGrTAe2tbA1vWo8l9j9wPAN6E9ADw2w7N7p5VJNG/C7I9KezLZXHYh0YHakzm2m0in1oG87HaimDycG8XJvsSz8GQQoSLB/e4kZ8KwTG4UQ5gcVOH5gJf1hdD5PLvDh/LVF2t5BAiXAodAUfR7rNDrX+/FQHsM4MweYW+TVVKzTx1C8YtbWgWzqWxqom+its=
install:
- export DOCKER_IMAGE="jchodera/omnia-linux-anvil:texlive18-cuda${CUDA_SHORT_VERSION}"
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker pull ${DOCKER_IMAGE}; fi
script:
- chmod +x conda-build-all
- export CHECK_AGAINST="--check-against pgrinaway --check-against pgrinaway/label/cuda${CUDA_SHORT_VERSION}"
- export CHECK_AGAINST="$CHECK_AGAINST --check-against pgrinaway/label/beta --check-against
  pgrinaway/label/betacuda${CUDA_SHORT_VERSION}"
- export CHECK_AGAISNT="$CHECK_AGAINST --check-against pgrinaway/label/dev --check-against
  pgrinaway/label/devcuda${CUDA_SHORT_VERSION}"
- if [[ "${TRAVIS_PULL_REQUEST}" == "false" && "${TRAVIS_BRANCH}" == "master" ]];
  then export UPLOAD="--upload pgrinaway"; else export UPLOAD="%CHECK_AGAINST"; fi
- echo $UPLOAD
- |-
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
  docker run -e UPLOAD -e BINSTAR_TOKEN -e CUDA_VERSION -e CUDA_SHORT_VERSION -e TRAVIS_PULL_REQUEST -t -i --rm -v `pwd`:/io ${DOCKER_IMAGE} bash /io/devtools/docker-build.sh;
  elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
  echo "Building osx..."; export NVIDIA_CACHE=$HOME/nvidia_cache; bash devtools/osx-build.sh;
  fi
